name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image for build stage
        run: |
          docker compose -f ./docker-compose.yml build build

      - name: Run the build process
        run: |
          docker compose -f ./docker-compose.yml run --name build_container build

      - name: Copy binary to artifacts
        run: |
          mkdir -p artifacts
          docker cp build_container:/app/src/binary artifacts/

      - name: Save logs
        run: |
          mkdir -p logs
          docker logs build_container > logs/build.log || echo "No logs to save"

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: logs/

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-binaries
          path: artifacts/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image for test stage
        run: |
          docker compose -f ./docker-compose.yml build test

      - name: Run the test process
        run: |
          docker compose -f ./docker-compose.yml run --name test_container test

      - name: Save logs
        run: |
          mkdir -p logs
          docker logs test_container > logs/test.log || echo "No logs to save"

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: logs/

  upload:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image for upload stage
        run: |
          docker compose -f ./docker-compose.yml build upload

      - name: Run the upload process
        run: |
          docker compose -f ./docker-compose.yml run --name upload_container upload

      - name: Copy binary to artifacts
        run: |
          mkdir -p artifacts
          docker cp upload_container:/app/src/binary artifacts/

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: artifacts/

  cleanup:
    runs-on: ubuntu-latest
    needs: upload

    steps:
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Clean up orphan containers
        run: |
          docker compose -f ./docker-compose.yml down --remove-orphans

      - name: Clean up unused Docker images
        run: |
          docker image prune -f

      - name: Clean up unused volumes
        run: |
          docker volume prune -f

      - name: Clean up unused networks
        run: |
          docker network prune -f
